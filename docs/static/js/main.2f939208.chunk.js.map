{"version":3,"sources":["components/AddCategory.js","components/GifItem.js","utils/getGifs.js","hooks/useFetchGifs.js","components/GifsCategory.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategorias","useState","inputValue","setinputValue","onSubmit","params","preventDefault","trim","length","type","value","onChange","target","GifItem","title","url","className","src","alt","getGifs","category","a","urlFetch","encodeURI","fetch","res","json","data","gifs","map","id","images","downsized","useFetchGifs","isLoading","state","setstate","useEffect","then","GifsCategory","item","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2MAiCeA,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,sBAAMC,SAVW,SAACC,GAChBA,EAAOC,iBACHJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACK,GAAD,OAAaH,GAAb,mBAA2BG,OACzCF,EAAc,MAMpB,SACE,uBAAOM,KAAK,OAAOC,MAAOR,EAAYS,SAfpB,SAACN,GACrBF,EAAcE,EAAOO,OAAOF,a,QCOjBG,EAbC,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAMJ,IACrB,4BAAIA,Q,uBCUDK,EAhBF,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEFC,EAFE,yFAE2FC,UAAUH,GAFrG,qBAGUI,MAAMF,GAHhB,cAGFG,EAHE,gBAIeA,EAAIC,OAJnB,uBAIAC,EAJA,EAIAA,KACFC,EAAOD,EAAKE,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,OAC3B,MAAO,CACLD,GAAIA,EACJhB,MAH6C,EAAZA,MAIjCC,IAAKgB,EAAOC,UAAUjB,QATlB,kBAaLa,GAbK,4CAAH,sDCsBEK,EAlBM,SAACb,GACpB,MAA0BnB,mBAAS,CACjC0B,KAAM,GACNO,WAAW,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACX,GACpBS,EAAS,CACLT,KAAMA,EACNO,WAAW,SAGlB,CAACd,IAEGe,GCUMI,EAxBM,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGpB,EAAgCa,EAAab,GAAjCQ,EAAZ,EAAOD,KAAWO,EAAlB,EAAkBA,UAEpB,OACE,sBAAKlB,UAAU,oCAAf,UACM,6BAAKI,IAEDc,GAAY,qBAAKlB,UAAU,WAEnC,qBAAKA,UAAU,YAAf,gBACGY,QADH,IACGA,OADH,EACGA,EAAMC,KAAI,SAACW,GACV,OAAO,cAAC,EAAD,eAA2BA,GAAbA,EAAKV,aCGrBW,EAjBM,WACnB,MAAoCxC,mBAAS,CAAC,OAAQ,aAAtD,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAGA,OACE,gCACE,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,oCACG0C,QADH,IACGA,OADH,EACGA,EAAYb,KAAI,SAACW,GAChB,OAAO,cAAC,EAAD,CAAyBpB,SAAUoB,GAAhBA,YCRpCG,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2f939208.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ({ setcategorias }) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n\r\n  const inputOnChange = (params) => {\r\n    setinputValue(params.target.value);\r\n  };\r\n\r\n  const formSubmit = (params) => {\r\n      params.preventDefault();\r\n      if (inputValue.trim().length > 2) {\r\n          setcategorias((params) => [inputValue,...params]);\r\n          setinputValue('')\r\n          \r\n      }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={inputOnChange}></input>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setcategorias: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory;\r\n","import React from 'react'\r\n\r\nconst GifItem = ({title, url }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={ title}></img>\r\n            <p>{title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifItem.propTypes = {\r\n\r\n}\r\n\r\nexport default GifItem\r\n","const getGifs = async(category) => {\r\n    \r\n        const urlFetch = `http://api.giphy.com/v1/gifs/search?api_key=7YWemLJLKJhV1Al8orCcH5q3qZ5djxU8&q=${encodeURI(category)}&limit=7`;\r\n        const res = await fetch(urlFetch);\r\n        const { data } = await res.json();\r\n        const gifs = data.map(({ id, images, title }) => {\r\n          return {\r\n            id: id,\r\n            title: title,\r\n            url: images.downsized.url,\r\n          };\r\n        });\r\n    \r\n    return gifs;\r\n}\r\n\r\nexport default getGifs","import { useState, useEffect } from \"react\";\r\nimport getGifs from \"../utils/getGifs\";\r\n\r\n\r\nconst useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    isLoading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((data) => {\r\n        setstate({\r\n            data: data,\r\n            isLoading: false,\r\n          })\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetchGifs;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport GifItem from \"./GifItem\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\n\r\nconst GifsCategory = ({ category }) => {\r\n\r\n    \r\n    const {data:gifs, isLoading }  =useFetchGifs(category);\r\n\r\n  return (\r\n    <div className=\"animate__animated animate__bounce\">\r\n          <h2>{category}</h2>\r\n          {\r\n              isLoading &&<div className=\"loader\"></div>\r\n          }\r\n      <div className=\"card-grid\">\r\n        {gifs?.map((item) => {\r\n          return <GifItem key={item.id} {...item}></GifItem>;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGifsCategory.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifsCategory;\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifsCategory from \"./components/GifsCategory\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categorias, setcategorias] = useState([\"goku\", \"superman\"]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Gif Expert App</h2>\r\n      <AddCategory setcategorias={setcategorias}></AddCategory>\r\n      <ol>\r\n        {categorias?.map((item) => {\r\n          return <GifsCategory key={item} category={item}></GifsCategory>;\r\n        })}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}